AWSTemplateFormatVersion: '2010-09-09'
Description: Books API

Globals:
  Function:
    Runtime: nodejs12.x

Parameters:
  company:
    Type: String

  logLevel:
    Type: String
    Default: debug
    AllowedValues:
      - debug
      - info
      - error
  stage:
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - staging
      - prod

Resources:
  WebsiteBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${company}.books"
      AccessControl: PublicRead
      WebsiteConfiguration:
        IndexDocument: index.html

  WebsiteBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      PolicyDocument:
        Id: MyPolicy
        Version: 2012-10-17
        Statement:
          - Sid: PublicReadForGetBucketObjects
            Effect: Allow
            Principal: '*'
            Action: 's3:GetObject'
            Resource: !Join
              - ''
              - - 'arn:aws:s3:::'
                - !Ref WebsiteBucket
                - /*
      Bucket: !Ref WebsiteBucket

  BooksApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      StageName: !Ref stage
      CorsConfiguration:
        AllowHeaders:
          - "authorization"
          - "content-type"
        AllowOrigins:
          - "*"
        AllowMethods:
          - "*"

  BooksTable:
    Type: AWS::Serverless::SimpleTable

  ListAllBooksFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: Books api
      Handler: build/list-books.handler
      Timeout: 3
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref BooksTable
      Environment:
        Variables:
          LOG_LEVEL: !Ref logLevel
          BOOKS_TABLE: !Ref BooksTable
      Events:
        ListAllBooks:
          Type: HttpApi
          Properties:
            ApiId: !Ref BooksApi
            Method: GET
            Path: "/books"

  CreateBookFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: Books api
      Handler: build/create-book.handler
      Timeout: 3
      Environment:
        Variables:
          LOG_LEVEL: !Ref logLevel
          BOOKS_TABLE: !Ref BooksTable
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref BooksTable
      Events:
        ListAllBooks:
          Type: HttpApi
          Properties:
            ApiId: !Ref BooksApi
            Method: POST
            Path: "/books"
Outputs:
  WebsiteBucket:
    Value: !GetAtt
      - WebsiteBucket
      - WebsiteURL
    Description: URL for website hosted on S3

  BooksApiUrl:
    Description: URL of the Books API endpoint
    Value: !Sub "https://${BooksApi}.execute-api.${AWS::Region}.${AWS::URLSuffix}/${stage}/"


Transform: AWS::Serverless-2016-10-31
